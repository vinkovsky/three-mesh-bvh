{"mappings":"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","sources":["node_modules/three/examples/jsm/geometries/RoundedBoxGeometry.js","node_modules/stats.js/build/stats.min.js","example/characterMovement.js"],"sourcesContent":["import {\n\tBoxGeometry,\n\tVector3\n} from 'three';\n\nconst _tempNormal = new Vector3();\n\nfunction getUv( faceDirVector, normal, uvAxis, projectionAxis, radius, sideLength ) {\n\n\tconst totArcLength = 2 * Math.PI * radius / 4;\n\n\t// length of the planes between the arcs on each axis\n\tconst centerLength = Math.max( sideLength - 2 * radius, 0 );\n\tconst halfArc = Math.PI / 4;\n\n\t// Get the vector projected onto the Y plane\n\t_tempNormal.copy( normal );\n\t_tempNormal[ projectionAxis ] = 0;\n\t_tempNormal.normalize();\n\n\t// total amount of UV space alloted to a single arc\n\tconst arcUvRatio = 0.5 * totArcLength / ( totArcLength + centerLength );\n\n\t// the distance along one arc the point is at\n\tconst arcAngleRatio = 1.0 - ( _tempNormal.angleTo( faceDirVector ) / halfArc );\n\n\tif ( Math.sign( _tempNormal[ uvAxis ] ) === 1 ) {\n\n\t\treturn arcAngleRatio * arcUvRatio;\n\n\t} else {\n\n\t\t// total amount of UV space alloted to the plane between the arcs\n\t\tconst lenUv = centerLength / ( totArcLength + centerLength );\n\t\treturn lenUv + arcUvRatio + arcUvRatio * ( 1.0 - arcAngleRatio );\n\n\t}\n\n}\n\nclass RoundedBoxGeometry extends BoxGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, segments = 2, radius = 0.1 ) {\n\n\t\t// ensure segments is odd so we have a plane connecting the rounded corners\n\t\tsegments = segments * 2 + 1;\n\n\t\t// ensure radius isn't bigger than shortest side\n\t\tradius = Math.min( width / 2, height / 2, depth / 2, radius );\n\n\t\tsuper( 1, 1, 1, segments, segments, segments );\n\n\t\t// if we just have one segment we're the same as a regular box\n\t\tif ( segments === 1 ) return;\n\n\t\tconst geometry2 = this.toNonIndexed();\n\n\t\tthis.index = null;\n\t\tthis.attributes.position = geometry2.attributes.position;\n\t\tthis.attributes.normal = geometry2.attributes.normal;\n\t\tthis.attributes.uv = geometry2.attributes.uv;\n\n\t\t//\n\n\t\tconst position = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst box = new Vector3( width, height, depth ).divideScalar( 2 ).subScalar( radius );\n\n\t\tconst positions = this.attributes.position.array;\n\t\tconst normals = this.attributes.normal.array;\n\t\tconst uvs = this.attributes.uv.array;\n\n\t\tconst faceTris = positions.length / 6;\n\t\tconst faceDirVector = new Vector3();\n\t\tconst halfSegmentSize = 0.5 / segments;\n\n\t\tfor ( let i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tposition.fromArray( positions, i );\n\t\t\tnormal.copy( position );\n\t\t\tnormal.x -= Math.sign( normal.x ) * halfSegmentSize;\n\t\t\tnormal.y -= Math.sign( normal.y ) * halfSegmentSize;\n\t\t\tnormal.z -= Math.sign( normal.z ) * halfSegmentSize;\n\t\t\tnormal.normalize();\n\n\t\t\tpositions[ i + 0 ] = box.x * Math.sign( position.x ) + normal.x * radius;\n\t\t\tpositions[ i + 1 ] = box.y * Math.sign( position.y ) + normal.y * radius;\n\t\t\tpositions[ i + 2 ] = box.z * Math.sign( position.z ) + normal.z * radius;\n\n\t\t\tnormals[ i + 0 ] = normal.x;\n\t\t\tnormals[ i + 1 ] = normal.y;\n\t\t\tnormals[ i + 2 ] = normal.z;\n\n\t\t\tconst side = Math.floor( i / faceTris );\n\n\t\t\tswitch ( side ) {\n\n\t\t\t\tcase 0: // right\n\n\t\t\t\t\t// generate UVs along Z then Y\n\t\t\t\t\tfaceDirVector.set( 1, 0, 0 );\n\t\t\t\t\tuvs[ j + 0 ] = getUv( faceDirVector, normal, 'z', 'y', radius, depth );\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'y', 'z', radius, height );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // left\n\n\t\t\t\t\t// generate UVs along Z then Y\n\t\t\t\t\tfaceDirVector.set( - 1, 0, 0 );\n\t\t\t\t\tuvs[ j + 0 ] = 1.0 - getUv( faceDirVector, normal, 'z', 'y', radius, depth );\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'y', 'z', radius, height );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // top\n\n\t\t\t\t\t// generate UVs along X then Z\n\t\t\t\t\tfaceDirVector.set( 0, 1, 0 );\n\t\t\t\t\tuvs[ j + 0 ] = 1.0 - getUv( faceDirVector, normal, 'x', 'z', radius, width );\n\t\t\t\t\tuvs[ j + 1 ] = getUv( faceDirVector, normal, 'z', 'x', radius, depth );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // bottom\n\n\t\t\t\t\t// generate UVs along X then Z\n\t\t\t\t\tfaceDirVector.set( 0, - 1, 0 );\n\t\t\t\t\tuvs[ j + 0 ] = 1.0 - getUv( faceDirVector, normal, 'x', 'z', radius, width );\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'z', 'x', radius, depth );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 4: // front\n\n\t\t\t\t\t// generate UVs along X then Y\n\t\t\t\t\tfaceDirVector.set( 0, 0, 1 );\n\t\t\t\t\tuvs[ j + 0 ] = 1.0 - getUv( faceDirVector, normal, 'x', 'y', radius, width );\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'y', 'x', radius, height );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 5: // back\n\n\t\t\t\t\t// generate UVs along X then Y\n\t\t\t\t\tfaceDirVector.set( 0, 0, - 1 );\n\t\t\t\t\tuvs[ j + 0 ] = getUv( faceDirVector, normal, 'x', 'y', radius, width );\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'y', 'x', radius, height );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport { RoundedBoxGeometry };\n","// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","import * as THREE from 'three';\nimport { RoundedBoxGeometry } from 'three/examples/jsm/geometries/RoundedBoxGeometry.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport * as BufferGeometryUtils from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport Stats from 'stats.js';\nimport { GUI } from 'dat.gui';\nimport { MeshBVH, MeshBVHVisualizer } from '..';\n\nconst params = {\n\n\tfirstPerson: false,\n\n\tdisplayCollider: false,\n\tdisplayBVH: false,\n\tvisualizeDepth: 10,\n\tgravity: - 30,\n\tplayerSpeed: 10,\n\tphysicsSteps: 5,\n\n\treset: reset,\n\n};\n\nlet renderer, camera, scene, clock, gui, stats;\nlet environment, collider, visualizer, player, controls;\nlet playerIsOnGround = false;\nlet fwdPressed = false, bkdPressed = false, lftPressed = false, rgtPressed = false;\nlet playerVelocity = new THREE.Vector3();\nlet upVector = new THREE.Vector3( 0, 1, 0 );\nlet tempVector = new THREE.Vector3();\nlet tempVector2 = new THREE.Vector3();\nlet tempBox = new THREE.Box3();\nlet tempMat = new THREE.Matrix4();\nlet tempSegment = new THREE.Line3();\n\ninit();\nrender();\n\nfunction init() {\n\n\tconst bgColor = 0x263238 / 2;\n\n\t// renderer setup\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( bgColor, 1 );\n\trenderer.shadowMap.enabled = true;\n\trenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene setup\n\tscene = new THREE.Scene();\n\tscene.fog = new THREE.Fog( bgColor, 20, 70 );\n\n\t// lights\n\tconst light = new THREE.DirectionalLight( 0xffffff, 1 );\n\tlight.position.set( 1, 1.5, 1 ).multiplyScalar( 50 );\n\tlight.shadow.mapSize.setScalar( 2048 );\n\tlight.shadow.bias = - 1e-4;\n\tlight.shadow.normalBias = 0.05;\n\tlight.castShadow = true;\n\n\tconst shadowCam = light.shadow.camera;\n\tshadowCam.bottom = shadowCam.left = - 30;\n\tshadowCam.top = 30;\n\tshadowCam.right = 45;\n\n\tscene.add( light );\n\tscene.add( new THREE.HemisphereLight( 0xffffff, 0x223344, 0.4 ) );\n\n\t// camera setup\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 50 );\n\tcamera.position.set( 10, 10, - 10 );\n\tcamera.far = 100;\n\tcamera.updateProjectionMatrix();\n\twindow.camera = camera;\n\n\tclock = new THREE.Clock();\n\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\n\t// stats setup\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.dom );\n\n\tloadColliderEnvironment();\n\n\t// character\n\tplayer = new THREE.Mesh(\n\t\tnew RoundedBoxGeometry( 1.0, 2.0, 1.0, 10, 0.5 ),\n\t\tnew THREE.MeshStandardMaterial()\n\t);\n\tplayer.geometry.translate( 0, - 0.5, 0 );\n\tplayer.capsuleInfo = {\n\t\tradius: 0.5,\n\t\tsegment: new THREE.Line3( new THREE.Vector3(), new THREE.Vector3( 0, - 1.0, 0.0 ) )\n\t};\n\tplayer.castShadow = true;\n\tplayer.receiveShadow = true;\n\tplayer.material.shadowSide = 2;\n\tscene.add( player );\n\treset();\n\n\t// dat.gui\n\tgui = new GUI();\n\tgui.add( params, 'firstPerson' ).onChange( v => {\n\n\t\tif ( ! v ) {\n\n\t\t\tcamera\n\t\t\t\t.position\n\t\t\t\t.sub( controls.target )\n\t\t\t\t.normalize()\n\t\t\t\t.multiplyScalar( 10 )\n\t\t\t\t.add( controls.target );\n\n\t\t}\n\n\t} );\n\n\tconst visFolder = gui.addFolder( 'Visualization' );\n\tvisFolder.add( params, 'displayCollider' );\n\tvisFolder.add( params, 'displayBVH' );\n\tvisFolder.add( params, 'visualizeDepth', 1, 20, 1 ).onChange( v => {\n\n\t\tvisualizer.depth = v;\n\t\tvisualizer.update();\n\n\t} );\n\tvisFolder.open();\n\n\tconst physicsFolder = gui.addFolder( 'Player' );\n\tphysicsFolder.add( params, 'physicsSteps', 0, 30, 1 );\n\tphysicsFolder.add( params, 'gravity', - 100, 100, 0.01 ).onChange( v => {\n\n\t\tparams.gravity = parseFloat( v );\n\n\t} );\n\tphysicsFolder.add( params, 'playerSpeed', 1, 20 );\n\tphysicsFolder.open();\n\n\tgui.add( params, 'reset' );\n\tgui.open();\n\n\twindow.addEventListener( 'resize', function () {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}, false );\n\n\twindow.addEventListener( 'keydown', function ( e ) {\n\n\t\tswitch ( e.code ) {\n\n\t\t\tcase 'KeyW': fwdPressed = true; break;\n\t\t\tcase 'KeyS': bkdPressed = true; break;\n\t\t\tcase 'KeyD': rgtPressed = true; break;\n\t\t\tcase 'KeyA': lftPressed = true; break;\n\t\t\tcase 'Space':\n\t\t\t\tif ( playerIsOnGround ) {\n\n\t\t\t\t\tplayerVelocity.y = 10.0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t} );\n\n\twindow.addEventListener( 'keyup', function ( e ) {\n\n\t\tswitch ( e.code ) {\n\n\t\t\tcase 'KeyW': fwdPressed = false; break;\n\t\t\tcase 'KeyS': bkdPressed = false; break;\n\t\t\tcase 'KeyD': rgtPressed = false; break;\n\t\t\tcase 'KeyA': lftPressed = false; break;\n\n\t\t}\n\n\t} );\n\n}\n\nfunction loadColliderEnvironment() {\n\n\tnew GLTFLoader().load( '../models/dungeon_low_poly_game_level_challenge/scene.gltf', res => {\n\n\t\tconst gltfScene = res.scene;\n\t\tgltfScene.scale.setScalar( .01 );\n\n\t\tconst box = new THREE.Box3();\n\t\tbox.setFromObject( gltfScene );\n\t\tbox.getCenter( gltfScene.position ).negate();\n\t\tgltfScene.updateMatrixWorld( true );\n\n\t\t// visual geometry setup\n\t\tconst toMerge = {};\n\t\tgltfScene.traverse( c => {\n\n\t\t\tif (\n\t\t\t\t/Boss/.test( c.name ) ||\n\t\t\t\t/Enemie/.test( c.name ) ||\n\t\t\t\t/Shield/.test( c.name ) ||\n\t\t\t\t/Sword/.test( c.name ) ||\n\t\t\t\t/Character/.test( c.name ) ||\n\t\t\t\t/Gate/.test( c.name ) ||\n\n\t\t\t\t// spears\n\t\t\t\t/Cube/.test( c.name ) ||\n\n\t\t\t\t// pink brick\n\t\t\t\tc.material && c.material.color.r === 1.0\n\t\t\t) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( c.isMesh ) {\n\n\t\t\t\tconst hex = c.material.color.getHex();\n\t\t\t\ttoMerge[ hex ] = toMerge[ hex ] || [];\n\t\t\t\ttoMerge[ hex ].push( c );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tenvironment = new THREE.Group();\n\t\tfor ( const hex in toMerge ) {\n\n\t\t\tconst arr = toMerge[ hex ];\n\t\t\tconst visualGeometries = [];\n\t\t\tarr.forEach( mesh => {\n\n\t\t\t\tif ( mesh.material.emissive.r !== 0 ) {\n\n\t\t\t\t\tenvironment.attach( mesh );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst geom = mesh.geometry.clone();\n\t\t\t\t\tgeom.applyMatrix4( mesh.matrixWorld );\n\t\t\t\t\tvisualGeometries.push( geom );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( visualGeometries.length ) {\n\n\t\t\t\tconst newGeom = BufferGeometryUtils.mergeBufferGeometries( visualGeometries );\n\t\t\t\tconst newMesh = new THREE.Mesh( newGeom, new THREE.MeshStandardMaterial( { color: parseInt( hex ), shadowSide: 2 } ) );\n\t\t\t\tnewMesh.castShadow = true;\n\t\t\t\tnewMesh.receiveShadow = true;\n\t\t\t\tnewMesh.material.shadowSide = 2;\n\n\t\t\t\tenvironment.add( newMesh );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// collect all geometries to merge\n\t\tconst geometries = [];\n\t\tenvironment.updateMatrixWorld( true );\n\t\tenvironment.traverse( c => {\n\n\t\t\tif ( c.geometry ) {\n\n\t\t\t\tconst cloned = c.geometry.clone();\n\t\t\t\tcloned.applyMatrix4( c.matrixWorld );\n\t\t\t\tfor ( const key in cloned.attributes ) {\n\n\t\t\t\t\tif ( key !== 'position' ) {\n\n\t\t\t\t\t\tcloned.deleteAttribute( key );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometries.push( cloned );\n\n\t\t\t}\n\n\t\t} );\n\n\t\t// create the merged geometry\n\t\tconst mergedGeometry = BufferGeometryUtils.mergeBufferGeometries( geometries, false );\n\t\tmergedGeometry.boundsTree = new MeshBVH( mergedGeometry, { lazyGeneration: false } );\n\n\t\tcollider = new THREE.Mesh( mergedGeometry );\n\t\tcollider.material.wireframe = true;\n\t\tcollider.material.opacity = 0.5;\n\t\tcollider.material.transparent = true;\n\n\t\tvisualizer = new MeshBVHVisualizer( collider, params.visualizeDepth );\n\t\tscene.add( visualizer );\n\t\tscene.add( collider );\n\t\tscene.add( environment );\n\n\t} );\n\n}\n\nfunction reset() {\n\n\tplayerVelocity.set( 0, 0, 0 );\n\tplayer.position.set( 15.75, - 3, 30 );\n\tcamera.position.sub( controls.target );\n\tcontrols.target.copy( player.position );\n\tcamera.position.add( player.position );\n\tcontrols.update();\n\n}\n\nfunction updatePlayer( delta ) {\n\n\tplayerVelocity.y += playerIsOnGround ? 0 : delta * params.gravity;\n\tplayer.position.addScaledVector( playerVelocity, delta );\n\n\t// move the player\n\tconst angle = controls.getAzimuthalAngle();\n\tif ( fwdPressed ) {\n\n\t\ttempVector.set( 0, 0, - 1 ).applyAxisAngle( upVector, angle );\n\t\tplayer.position.addScaledVector( tempVector, params.playerSpeed * delta );\n\n\t}\n\n\tif ( bkdPressed ) {\n\n\t\ttempVector.set( 0, 0, 1 ).applyAxisAngle( upVector, angle );\n\t\tplayer.position.addScaledVector( tempVector, params.playerSpeed * delta );\n\n\t}\n\n\tif ( lftPressed ) {\n\n\t\ttempVector.set( - 1, 0, 0 ).applyAxisAngle( upVector, angle );\n\t\tplayer.position.addScaledVector( tempVector, params.playerSpeed * delta );\n\n\t}\n\n\tif ( rgtPressed ) {\n\n\t\ttempVector.set( 1, 0, 0 ).applyAxisAngle( upVector, angle );\n\t\tplayer.position.addScaledVector( tempVector, params.playerSpeed * delta );\n\n\t}\n\n\tplayer.updateMatrixWorld();\n\n\t// adjust player position based on collisions\n\tconst capsuleInfo = player.capsuleInfo;\n\ttempBox.makeEmpty();\n\ttempMat.copy( collider.matrixWorld ).invert();\n\ttempSegment.copy( capsuleInfo.segment );\n\n\t// get the position of the capsule in the local space of the collider\n\ttempSegment.start.applyMatrix4( player.matrixWorld ).applyMatrix4( tempMat );\n\ttempSegment.end.applyMatrix4( player.matrixWorld ).applyMatrix4( tempMat );\n\n\t// get the axis aligned bounding box of the capsule\n\ttempBox.expandByPoint( tempSegment.start );\n\ttempBox.expandByPoint( tempSegment.end );\n\n\ttempBox.min.addScalar( - capsuleInfo.radius );\n\ttempBox.max.addScalar( capsuleInfo.radius );\n\n\tcollider.geometry.boundsTree.shapecast( {\n\n\t\tintersectsBounds: box => box.intersectsBox( tempBox ),\n\n\t\tintersectsTriangle: tri => {\n\n\t\t\t// check if the triangle is intersecting the capsule and adjust the\n\t\t\t// capsule position if it is.\n\t\t\tconst triPoint = tempVector;\n\t\t\tconst capsulePoint = tempVector2;\n\n\t\t\tconst distance = tri.closestPointToSegment( tempSegment, triPoint, capsulePoint );\n\t\t\tif ( distance < capsuleInfo.radius ) {\n\n\t\t\t\tconst depth = capsuleInfo.radius - distance;\n\t\t\t\tconst direction = capsulePoint.sub( triPoint ).normalize();\n\n\t\t\t\ttempSegment.start.addScaledVector( direction, depth );\n\t\t\t\ttempSegment.end.addScaledVector( direction, depth );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t// get the adjusted position of the capsule collider in world space after checking\n\t// triangle collisions and moving it. capsuleInfo.segment.start is assumed to be\n\t// the origin of the player model.\n\tconst newPosition = tempVector;\n\tnewPosition.copy( tempSegment.start ).applyMatrix4( collider.matrixWorld );\n\n\t// check how much the collider was moved\n\tconst deltaVector = tempVector2;\n\tdeltaVector.subVectors( newPosition, player.position );\n\n\t// if the player was primarily adjusted vertically we assume it's on something we should consider ground\n\tplayerIsOnGround = deltaVector.y > Math.abs( delta * playerVelocity.y * 0.25 );\n\n\tconst offset = Math.max( 0.0, deltaVector.length() - 1e-5 );\n\tdeltaVector.normalize().multiplyScalar( offset );\n\n\t// adjust the player model\n\tplayer.position.add( deltaVector );\n\n\tif ( ! playerIsOnGround ) {\n\n\t\tdeltaVector.normalize();\n\t\tplayerVelocity.addScaledVector( deltaVector, - deltaVector.dot( playerVelocity ) );\n\n\t} else {\n\n\t\tplayerVelocity.set( 0, 0, 0 );\n\n\t}\n\n\t// adjust the camera\n\tcamera.position.sub( controls.target );\n\tcontrols.target.copy( player.position );\n\tcamera.position.add( player.position );\n\n\t// if the player has fallen too far below the level reset their position to the start\n\tif ( player.position.y < - 25 ) {\n\n\t\treset();\n\n\t}\n\n}\n\nfunction render() {\n\n\tstats.update();\n\trequestAnimationFrame( render );\n\n\tconst delta = Math.min( clock.getDelta(), 0.1 );\n\tif ( params.firstPerson ) {\n\n\t\tcontrols.maxPolarAngle = Math.PI;\n\t\tcontrols.minDistance = 1e-4;\n\t\tcontrols.maxDistance = 1e-4;\n\n\t} else {\n\n\t\tcontrols.maxPolarAngle = Math.PI / 2;\n\t\tcontrols.minDistance = 1;\n\t\tcontrols.maxDistance = 20;\n\n\t}\n\n\tif ( collider ) {\n\n\t\tcollider.visible = params.displayCollider;\n\t\tvisualizer.visible = params.displayBVH;\n\n\t\tconst physicsSteps = params.physicsSteps;\n\n\t\tfor ( let i = 0; i < physicsSteps; i ++ ) {\n\n\t\t\tupdatePlayer( delta / physicsSteps );\n\n\t\t}\n\n\t}\n\n\t// TODO: limit the camera movement based on the collider\n\t// raycast in direction of camera and move it if it's further than the closest point\n\n\tcontrols.update();\n\n\trenderer.render( scene, camera );\n\n}\n"],"names":["$8be04d874cd74072$var$_tempNormal","Vector3","$8be04d874cd74072$var$getUv","faceDirVector","normal","uvAxis","projectionAxis","radius","sideLength","totArcLength","Math","PI","centerLength","max","halfArc","copy","normalize","arcUvRatio","arcAngleRatio","angleTo","sign","$8be04d874cd74072$export$418f4e74cfe71a96","$hGT0Q","BoxGeometry","width","height","depth","segments","min","super","geometry2","this","toNonIndexed","index","attributes","position","uv","box","divideScalar","subScalar","positions","array","normals","uvs","faceTris","length","halfSegmentSize","i","j","fromArray","x","y","z","floor","set","f","e","$f4c59361c37dab96$exports","a","c","appendChild","dom","u","d","children","style","display","l","document","createElement","cssText","addEventListener","preventDefault","k","performance","Date","now","g","r","Panel","h","self","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Infinity","round","window","devicePixelRatio","v","m","n","p","q","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","w","drawImage","define","amd","Stats","$1f23d87e64a7a672$var$params","firstPerson","displayCollider","displayBVH","visualizeDepth","gravity","playerSpeed","physicsSteps","reset","$1f23d87e64a7a672$var$reset","$1f23d87e64a7a672$var$renderer","$1f23d87e64a7a672$var$camera","$1f23d87e64a7a672$var$scene","$1f23d87e64a7a672$var$clock","$1f23d87e64a7a672$var$gui","$1f23d87e64a7a672$var$stats","$1f23d87e64a7a672$var$environment","$1f23d87e64a7a672$var$collider","$1f23d87e64a7a672$var$visualizer","$1f23d87e64a7a672$var$player","$1f23d87e64a7a672$var$controls","$1f23d87e64a7a672$var$playerIsOnGround","$1f23d87e64a7a672$var$fwdPressed","$1f23d87e64a7a672$var$bkdPressed","$1f23d87e64a7a672$var$lftPressed","$1f23d87e64a7a672$var$rgtPressed","$1f23d87e64a7a672$var$playerVelocity","$1f23d87e64a7a672$var$upVector","$1f23d87e64a7a672$var$tempVector","$1f23d87e64a7a672$var$tempVector2","$1f23d87e64a7a672$var$tempBox","Box3","$1f23d87e64a7a672$var$tempMat","Matrix4","$1f23d87e64a7a672$var$tempSegment","Line3","sub","target","add","$1f23d87e64a7a672$var$updatePlayer","delta","addScaledVector","angle","getAzimuthalAngle","applyAxisAngle","updateMatrixWorld","capsuleInfo","makeEmpty","matrixWorld","invert","segment","start","applyMatrix4","expandByPoint","addScalar","geometry","boundsTree","shapecast","intersectsBounds","intersectsBox","intersectsTriangle","tri","triPoint","capsulePoint","distance","closestPointToSegment","direction","newPosition","deltaVector","subVectors","abs","offset","multiplyScalar","dot","bgColor","WebGLRenderer","antialias","setPixelRatio","setSize","innerWidth","innerHeight","setClearColor","shadowMap","enabled","type","PCFSoftShadowMap","outputEncoding","sRGBEncoding","body","Scene","fog","Fog","light","DirectionalLight","shadow","mapSize","setScalar","bias","normalBias","castShadow","shadowCam","camera","bottom","left","top","right","HemisphereLight","PerspectiveCamera","far","updateProjectionMatrix","Clock","$W2bOH","OrbitControls","$parcel$interopDefault","$4EHgc","GLTFLoader","load","res","gltfScene","scene","scale","setFromObject","getCenter","negate","toMerge","traverse","test","name","material","color","isMesh","hex","getHex","push","Group","arr","visualGeometries","forEach","mesh","emissive","attach","geom","clone","newGeom","$7N5zk","mergeBufferGeometries","newMesh","Mesh","MeshStandardMaterial","parseInt","shadowSide","receiveShadow","geometries","cloned","key","deleteAttribute","mergedGeometry","$aBPXg","MeshBVH","lazyGeneration","wireframe","opacity","transparent","MeshBVHVisualizer","translate","$4Q0VG","GUI","onChange","visFolder","addFolder","open","physicsFolder","parseFloat","aspect","code","$1f23d87e64a7a672$var$init","$1f23d87e64a7a672$var$render","requestAnimationFrame","getDelta","maxPolarAngle","minDistance","maxDistance","visible","render"],"version":3,"file":"characterMovement.f20287fd.js.map"}