{"mappings":"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","sources":["node_modules/stats.js/build/stats.min.js","example/edgeIntersect.js"],"sourcesContent":["// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","import Stats from 'stats.js';\nimport * as dat from 'dat.gui';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { acceleratedRaycast, computeBoundsTree, disposeBoundsTree, SAH } from '..';\n\nTHREE.Mesh.prototype.raycast = acceleratedRaycast;\nTHREE.BufferGeometry.prototype.computeBoundsTree = computeBoundsTree;\nTHREE.BufferGeometry.prototype.disposeBoundsTree = disposeBoundsTree;\n\nconst params = {\n\tposition: new THREE.Vector3(),\n\trotation: new THREE.Euler(),\n\tscale: new THREE.Vector3( 1, 1, 1 ),\n\tspeed: 1,\n\tdisplayMeshes: false,\n\tdistance: 1.1,\n};\n\nlet stats;\nlet scene, camera, renderer, orbitControls;\nlet mesh1, mesh2, lineGroup, line, bgLine;\nlet lastTime = window.performance.now();\n\ninit();\nrender();\n\nfunction init() {\n\n\tconst bgColor = 0x66093a;\n\n\t// renderer setup\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( bgColor, 1 );\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene setup\n\tscene = new THREE.Scene();\n\tscene.fog = new THREE.Fog( 0x263238 / 2, 20, 60 );\n\n\tconst light = new THREE.DirectionalLight( 0xffffff, 0.5 );\n\tlight.position.set( 1, 1, 1 );\n\tscene.add( light );\n\tscene.add( new THREE.AmbientLight( 0xffffff, 0.4 ) );\n\n\t// geometry setup\n\tconst radius = 1;\n\tconst tube = 0.4;\n\tconst tubularSegments = 100;\n\tconst radialSegments = 40;\n\n\tconst geometry = new THREE.TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments );\n\tconst material = new THREE.MeshPhongMaterial( {\n\t\tcolor: 0xffffff,\n\t\tside: THREE.DoubleSide,\n\t\tshininess: 0.01,\n\t\tpolygonOffset: true,\n\t\tpolygonOffsetFactor: 1,\n\t\tpolygonOffsetUnits: 1,\n\t} );\n\n\t// const geometry = new THREE.BoxBufferGeometry();\n\n\t// const geometry = new THREE.BufferGeometry();\n\t// geometry.setFromPoints( [\n\t// \tnew THREE.Vector3( 1, 0, 0 ),\n\t// \tnew THREE.Vector3( - 1, 0, 0 ),\n\t// \tnew THREE.Vector3( 0, 1, 0 ),\n\t// ] );\n\t// geometry.computeVertexNormals();\n\tgeometry.computeBoundsTree( { maxLeafTris: 1, strategy: SAH } );\n\n\tmesh1 = new THREE.Mesh( geometry, material );\n\tmesh2 = new THREE.Mesh( geometry, material );\n\tscene.add( mesh1, mesh2 );\n\n\tconst lineGeometry = new THREE.BufferGeometry();\n\tlineGeometry.setFromPoints( [ new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, - 1, 0 ) ] );\n\tline = new THREE.LineSegments( lineGeometry, new THREE.LineBasicMaterial( { color: 0xE91E63 } ) );\n\n\tbgLine = line.clone();\n\tbgLine.material = new THREE.LineBasicMaterial( { color: 0xE91E63, transparent: true, opacity: 0.25, depthTest: false } );\n\n\tlineGroup = new THREE.Group();\n\tlineGroup.add( line, bgLine );\n\tscene.add( lineGroup );\n\n\t// camera setup\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 50 );\n\tcamera.position.set( 2, 2, 2 );\n\tcamera.far = 100;\n\tcamera.updateProjectionMatrix();\n\n\torbitControls = new OrbitControls( camera, renderer.domElement );\n\n\t// stats setup\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.dom );\n\n\tconst gui = new dat.GUI();\n\tgui.add( params, 'speed', 0, 10, 0.001 );\n\tgui.add( params, 'distance', 0, 1.5, 0.001 );\n\tgui.add( params, 'displayMeshes' );\n\n\tgui.open();\n\n\twindow.addEventListener( 'resize', function () {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}, false );\n\n}\n\nfunction render() {\n\n\trequestAnimationFrame( render );\n\n\tconst delta = window.performance.now() - lastTime;\n\tlastTime = window.performance.now();\n\n\tmesh1.position.y = - params.distance;\n\tmesh1.rotation.x -= delta * 3 * 0.0001 * params.speed * 0.5;\n\tmesh1.rotation.y -= delta * 1 * 0.0001 * params.speed * 0.5;\n\tmesh1.rotation.z -= delta * 2 * 0.0001 * params.speed * 0.5;\n\n\tmesh2.position.y = params.distance;\n\tmesh2.rotation.x += delta * 0.0001 * params.speed;\n\tmesh2.rotation.y += delta * 2 * 0.0001 * params.speed;\n\tmesh2.rotation.z += delta * 3 * 0.0001 * params.speed;\n\n\tmesh1.updateMatrixWorld();\n\tmesh2.updateMatrixWorld();\n\n\tconst matrix2to1 = new THREE.Matrix4()\n\t\t.copy( mesh1.matrixWorld )\n\t\t.invert()\n\t\t.multiply( mesh2.matrixWorld );\n\n\n\tconst edge = new THREE.Line3();\n\tconst results = [];\n\tmesh1.geometry.boundsTree.bvhcast( mesh2.geometry.boundsTree, matrix2to1, {\n\n\t\tintersectsTriangles( triangle1, triangle2 ) {\n\n\t\t\tif ( triangle1.intersectsTriangle( triangle2, edge ) ) {\n\n\t\t\t\tconst { start, end } = edge;\n\t\t\t\tresults.push(\n\t\t\t\t\tstart.x,\n\t\t\t\t\tstart.y,\n\t\t\t\t\tstart.z,\n\t\t\t\t\tend.x,\n\t\t\t\t\tend.y,\n\t\t\t\t\tend.z,\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tif ( results.length ) {\n\n\t\tconst geometry = line.geometry;\n\t\tconst posArray = geometry.attributes.position.array;\n\t\tif ( posArray.length < results.length ) {\n\n\t\t\tgeometry.dispose();\n\t\t\tgeometry.setAttribute( 'position', new THREE.BufferAttribute( new Float32Array( results ), 3, false ) );\n\n\t\t} else {\n\n\t\t\tposArray.set( results );\n\n\t\t}\n\n\t\tgeometry.setDrawRange( 0, results.length / 3 );\n\t\tgeometry.attributes.position.needsUpdate = true;\n\t\tlineGroup.position.copy( mesh1.position );\n\t\tlineGroup.rotation.copy( mesh1.rotation );\n\t\tlineGroup.scale.copy( mesh1.scale );\n\t\tlineGroup.visible = true;\n\n\t} else {\n\n\t\tlineGroup.visible = false;\n\n\t}\n\n\tmesh1.visible = params.displayMeshes;\n\tmesh2.visible = params.displayMeshes;\n\trenderer.render( scene, camera );\n\n\tstats.begin();\n\tstats.end();\n\n}\n\n"],"names":["f","e","$f4c59361c37dab96$exports","a","c","appendChild","dom","u","d","children","length","style","display","l","document","createElement","cssText","addEventListener","preventDefault","k","performance","Date","now","g","r","Panel","h","self","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","this","domElement","setMode","Infinity","Math","round","window","devicePixelRatio","v","m","n","p","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","w","min","max","drawImage","define","amd","Stats","$hGT0Q","Mesh","prototype","raycast","$aBPXg","acceleratedRaycast","BufferGeometry","computeBoundsTree","disposeBoundsTree","$a1670813c0003c36$var$params","position","Vector3","rotation","Euler","scale","speed","displayMeshes","distance","$a1670813c0003c36$var$stats","$a1670813c0003c36$var$scene","$a1670813c0003c36$var$camera","$a1670813c0003c36$var$renderer","$a1670813c0003c36$var$orbitControls","$a1670813c0003c36$var$mesh1","$a1670813c0003c36$var$mesh2","$a1670813c0003c36$var$lineGroup","$a1670813c0003c36$var$line","$a1670813c0003c36$var$bgLine","$a1670813c0003c36$var$lastTime","WebGLRenderer","antialias","setPixelRatio","setSize","innerWidth","innerHeight","setClearColor","outputEncoding","sRGBEncoding","body","Scene","fog","Fog","light","DirectionalLight","set","add","AmbientLight","geometry","TorusKnotBufferGeometry","material","MeshPhongMaterial","color","side","DoubleSide","shininess","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","maxLeafTris","strategy","SAH","lineGeometry","setFromPoints","LineSegments","LineBasicMaterial","clone","transparent","opacity","depthTest","Group","PerspectiveCamera","far","updateProjectionMatrix","$W2bOH","OrbitControls","$parcel$interopDefault","gui","$4Q0VG","GUI","open","aspect","$a1670813c0003c36$var$init","$a1670813c0003c36$var$render","requestAnimationFrame","delta","y","x","z","updateMatrixWorld","matrix2to1","Matrix4","copy","matrixWorld","invert","multiply","edge","Line3","results","boundsTree","bvhcast","intersectsTriangles","triangle1","triangle2","intersectsTriangle","start","push","posArray","attributes","array","dispose","setAttribute","BufferAttribute","Float32Array","setDrawRange","needsUpdate","visible","render"],"version":3,"file":"edgeIntersect.3386836d.js.map"}