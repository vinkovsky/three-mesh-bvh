{"mappings":"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","sources":["node_modules/stats.js/build/stats.min.js","example/raycast.js"],"sourcesContent":["// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","import Stats from 'stats.js';\nimport * as dat from 'dat.gui';\nimport * as THREE from 'three';\nimport {\n\tacceleratedRaycast, computeBoundsTree, disposeBoundsTree,\n\tCENTER, SAH, AVERAGE, MeshBVHVisualizer,\n} from '..';\n\nTHREE.Mesh.prototype.raycast = acceleratedRaycast;\nTHREE.BufferGeometry.prototype.computeBoundsTree = computeBoundsTree;\nTHREE.BufferGeometry.prototype.disposeBoundsTree = disposeBoundsTree;\n\nconst bgColor = 0x263238 / 2;\n\nlet renderer, scene, stats, camera;\nlet geometry, material, boundsViz, containerObj;\nconst knots = [];\nconst rayCasterObjects = [];\n\n// Create ray casters in the scene\nconst raycaster = new THREE.Raycaster();\nconst sphere = new THREE.SphereGeometry( 0.25, 20, 20 );\nconst cylinder = new THREE.CylinderGeometry( 0.01, 0.01 );\nconst pointDist = 25;\n\n// Delta timer\nlet lastFrameTime = null;\nlet deltaTime = 0;\n\nconst params = {\n\traycasters: {\n\t\tcount: 150,\n\t\tspeed: 1\n\t},\n\n\tmesh: {\n\t\tsplitStrategy: CENTER,\n\t\tcount: 1,\n\t\tuseBoundsTree: true,\n\t\tvisualizeBounds: false,\n\t\tdisplayParents: false,\n\t\tspeed: 1,\n\t\tvisualBoundsDepth: 10\n\t}\n};\n\ninit();\nupdateFromOptions();\nrender();\n\nfunction init() {\n\n\t// renderer setup\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( bgColor, 1 );\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene setup\n\tscene = new THREE.Scene();\n\tscene.fog = new THREE.Fog( 0x263238 / 2, 20, 60 );\n\n\tconst light = new THREE.DirectionalLight( 0xffffff, 0.5 );\n\tlight.position.set( 1, 1, 1 );\n\tscene.add( light );\n\tscene.add( new THREE.AmbientLight( 0xffffff, 0.4 ) );\n\n\t// geometry setup\n\tconst radius = 1;\n\tconst tube = 0.4;\n\tconst tubularSegments = 400;\n\tconst radialSegments = 100;\n\n\tcontainerObj = new THREE.Object3D();\n\tgeometry = new THREE.TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments );\n\t// const knotGeometry = new THREE.TorusKnotGeometry(radius, tube, tubularSegments, radialSegments);\n\tmaterial = new THREE.MeshPhongMaterial( { color: 0xE91E63 } );\n\tcontainerObj.scale.multiplyScalar( 10 );\n\tcontainerObj.rotation.x = 10.989999999999943;\n\tcontainerObj.rotation.y = 10.989999999999943;\n\tscene.add( containerObj );\n\n\t// camera setup\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 50 );\n\tcamera.position.z = 40;\n\tcamera.far = 100;\n\tcamera.updateProjectionMatrix();\n\n\t// stats setup\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.dom );\n\n\t// Run\n\tconst gui = new dat.GUI();\n\tconst rcFolder = gui.addFolder( 'Raycasters' );\n\trcFolder.add( params.raycasters, 'count' ).min( 1 ).max( 1000 ).step( 1 ).onChange( () => updateFromOptions() );\n\trcFolder.add( params.raycasters, 'speed' ).min( 0 ).max( 20 );\n\trcFolder.open();\n\n\tconst meshFolder = gui.addFolder( 'Mesh' );\n\tmeshFolder.add( params.mesh, 'useBoundsTree' ).onChange( () => updateFromOptions() );\n\tmeshFolder.add( params.mesh, 'splitStrategy', { 'CENTER': CENTER, 'SAH': SAH, 'AVERAGE': AVERAGE } ).onChange( () => updateFromOptions() );\n\tmeshFolder.add( params.mesh, 'count' ).min( 1 ).max( 300 ).step( 1 ).onChange( () => updateFromOptions() );\n\tmeshFolder.add( params.mesh, 'speed' ).min( 0 ).max( 20 );\n\tmeshFolder.add( params.mesh, 'visualizeBounds' ).onChange( () => updateFromOptions() );\n\tmeshFolder.add( params.mesh, 'displayParents' ).onChange( () => updateFromOptions() );\n\tmeshFolder.add( params.mesh, 'visualBoundsDepth' ).min( 1 ).max( 20 ).step( 1 ).onChange( () => updateFromOptions() );\n\tmeshFolder.open();\n\n\twindow.addEventListener( 'resize', function () {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}, false );\n\n}\n\nfunction addKnot() {\n\n\tconst mesh = new THREE.Mesh( geometry, material );\n\tmesh.rotation.x = Math.random() * 10;\n\tmesh.rotation.y = Math.random() * 10;\n\tknots.push( mesh );\n\tcontainerObj.add( mesh );\n\n}\n\nfunction addRaycaster() {\n\n\t// Objects\n\tconst obj = new THREE.Object3D();\n\tconst material = new THREE.MeshBasicMaterial( { color: 0xffffff } );\n\tconst origMesh = new THREE.Mesh( sphere, material );\n\tconst hitMesh = new THREE.Mesh( sphere, material );\n\thitMesh.scale.multiplyScalar( 0.25 );\n\torigMesh.scale.multiplyScalar( 0.5 );\n\n\tconst cylinderMesh = new THREE.Mesh( cylinder, new THREE.MeshBasicMaterial( { color: 0xffffff, transparent: true, opacity: 0.25 } ) );\n\n\t// Init the rotation root\n\tobj.add( cylinderMesh );\n\tobj.add( origMesh );\n\tobj.add( hitMesh );\n\tscene.add( obj );\n\n\t// set transforms\n\torigMesh.position.set( pointDist, 0, 0 );\n\tobj.rotation.x = Math.random() * 10;\n\tobj.rotation.y = Math.random() * 10;\n\tobj.rotation.z = Math.random() * 10;\n\n\t// reusable vectors\n\tconst origVec = new THREE.Vector3();\n\tconst dirVec = new THREE.Vector3();\n\tconst xDir = ( Math.random() - 0.5 );\n\tconst yDir = ( Math.random() - 0.5 );\n\tconst zDir = ( Math.random() - 0.5 );\n\trayCasterObjects.push( {\n\t\tupdate: () => {\n\n\t\t\tobj.rotation.x += xDir * 0.0001 * params.raycasters.speed * deltaTime;\n\t\t\tobj.rotation.y += yDir * 0.0001 * params.raycasters.speed * deltaTime;\n\t\t\tobj.rotation.z += zDir * 0.0001 * params.raycasters.speed * deltaTime;\n\n\t\t\torigMesh.updateMatrixWorld();\n\t\t\torigVec.setFromMatrixPosition( origMesh.matrixWorld );\n\t\t\tdirVec.copy( origVec ).multiplyScalar( - 1 ).normalize();\n\n\t\t\traycaster.set( origVec, dirVec );\n\t\t\traycaster.firstHitOnly = true;\n\t\t\tconst res = raycaster.intersectObject( containerObj, true );\n\t\t\tconst length = res.length ? res[ 0 ].distance : pointDist;\n\n\t\t\thitMesh.position.set( pointDist - length, 0, 0 );\n\n\t\t\tcylinderMesh.position.set( pointDist - ( length / 2 ), 0, 0 );\n\t\t\tcylinderMesh.scale.set( 1, length, 1 );\n\n\t\t\tcylinderMesh.rotation.z = Math.PI / 2;\n\n\t\t},\n\n\t\tremove: () => {\n\n\t\t\tscene.remove( obj );\n\n\t\t}\n\t} );\n\n}\n\nfunction updateFromOptions() {\n\n\t// Update raycaster count\n\twhile ( rayCasterObjects.length > params.raycasters.count ) {\n\n\t\trayCasterObjects.pop().remove();\n\n\t}\n\n\twhile ( rayCasterObjects.length < params.raycasters.count ) {\n\n\t\taddRaycaster();\n\n\t}\n\n\tif ( ! geometry ) {\n\n\t\treturn;\n\n\t}\n\n\t// Update whether or not to use the bounds tree\n\tif (\n\t\t! params.mesh.useBoundsTree && geometry.boundsTree ||\n\t\tgeometry.boundsTree && params.mesh.splitStrategy !== geometry.boundsTree.splitStrategy\n\t) {\n\n\t\tgeometry.disposeBoundsTree();\n\n\t}\n\n\tif ( params.mesh.useBoundsTree && ! geometry.boundsTree ) {\n\n\t\tconsole.time( 'computing bounds tree' );\n\t\tgeometry.computeBoundsTree( {\n\t\t\tmaxLeafTris: 5,\n\t\t\tstrategy: parseFloat( params.mesh.splitStrategy ),\n\t\t} );\n\t\tgeometry.boundsTree.splitStrategy = params.mesh.splitStrategy;\n\t\tconsole.timeEnd( 'computing bounds tree' );\n\n\t\tif ( boundsViz ) {\n\n\t\t\tboundsViz.update();\n\n\t\t}\n\n\t}\n\n\t// Update knot count\n\tconst oldLen = knots.length;\n\twhile ( knots.length > params.mesh.count ) {\n\n\t\tcontainerObj.remove( knots.pop() );\n\n\t}\n\n\twhile ( knots.length < params.mesh.count ) {\n\n\t\taddKnot();\n\n\t}\n\n\tif ( oldLen !== knots.length ) {\n\n\t\tconst lerp = ( a, b, t ) => a + ( b - a ) * t;\n\t\tconst lerpAmt = ( knots.length - 1 ) / ( 300 - 1 );\n\t\tconst dist = lerp( 0, 2, lerpAmt );\n\t\tconst scale = lerp( 1, 0.2, lerpAmt );\n\n\t\tknots.forEach( c => {\n\n\t\t\tc.scale.set( 1, 1, 1 ).multiplyScalar( scale );\n\n\t\t\tconst vec3 = new THREE.Vector3( 0, 1, 0 );\n\t\t\tvec3.applyAxisAngle( new THREE.Vector3( 1, 0, 0 ), Math.PI * Math.random() );\n\t\t\tvec3.applyAxisAngle( new THREE.Vector3( 0, 1, 0 ), 2 * Math.PI * Math.random() );\n\t\t\tvec3.multiplyScalar( dist );\n\n\t\t\tc.position.set( vec3.x, vec3.y, vec3.z );\n\n\t\t} );\n\n\t}\n\n\t// Update bounds viz\n\tconst shouldDisplayBounds = params.mesh.visualizeBounds && geometry.boundsTree;\n\tif ( boundsViz && ! shouldDisplayBounds ) {\n\n\t\tcontainerObj.remove( boundsViz );\n\t\tboundsViz = null;\n\n\t}\n\n\tif ( ! boundsViz && shouldDisplayBounds ) {\n\n\t\tboundsViz = new MeshBVHVisualizer( knots[ 0 ] );\n\t\tcontainerObj.add( boundsViz );\n\n\t}\n\n\tif ( boundsViz ) {\n\n\t\tboundsViz.depth = params.mesh.visualBoundsDepth;\n\t\tboundsViz.displayParents = params.mesh.displayParents;\n\t\tboundsViz.update();\n\n\t}\n\n}\n\nfunction render() {\n\n\tstats.begin();\n\n\tconst currTime = window.performance.now();\n\tlastFrameTime = lastFrameTime || currTime;\n\tdeltaTime = currTime - lastFrameTime;\n\n\tcontainerObj.rotation.x += 0.0001 * params.mesh.speed * deltaTime;\n\tcontainerObj.rotation.y += 0.0001 * params.mesh.speed * deltaTime;\n\tcontainerObj.children.forEach( c => {\n\n\t\tc.rotation.x += 0.0001 * params.mesh.speed * deltaTime;\n\t\tc.rotation.y += 0.0001 * params.mesh.speed * deltaTime;\n\n\t} );\n\tcontainerObj.updateMatrixWorld();\n\n\trayCasterObjects.forEach( f => f.update() );\n\n\trenderer.render( scene, camera );\n\n\tlastFrameTime = currTime;\n\n\tstats.end();\n\n\trequestAnimationFrame( render );\n\n}\n"],"names":["f","e","$f4c59361c37dab96$exports","a","c","appendChild","dom","u","d","children","length","style","display","l","document","createElement","cssText","addEventListener","preventDefault","k","performance","Date","now","g","r","Panel","h","self","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","this","domElement","setMode","Infinity","Math","round","window","devicePixelRatio","v","m","n","p","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","w","min","max","drawImage","define","amd","Stats","$hGT0Q","Mesh","prototype","raycast","$aBPXg","acceleratedRaycast","BufferGeometry","computeBoundsTree","disposeBoundsTree","$cfe85fcfa3111035$var$renderer","$cfe85fcfa3111035$var$scene","$cfe85fcfa3111035$var$stats","$cfe85fcfa3111035$var$camera","$cfe85fcfa3111035$var$geometry","$cfe85fcfa3111035$var$material","$cfe85fcfa3111035$var$boundsViz","$cfe85fcfa3111035$var$containerObj","$cfe85fcfa3111035$var$knots","$cfe85fcfa3111035$var$rayCasterObjects","$cfe85fcfa3111035$var$raycaster","Raycaster","$cfe85fcfa3111035$var$sphere","SphereGeometry","$cfe85fcfa3111035$var$cylinder","CylinderGeometry","$cfe85fcfa3111035$var$lastFrameTime","$cfe85fcfa3111035$var$deltaTime","$cfe85fcfa3111035$var$params","raycasters","count","speed","mesh","splitStrategy","CENTER","useBoundsTree","visualizeBounds","displayParents","visualBoundsDepth","$cfe85fcfa3111035$var$addKnot","rotation","x","random","y","push","add","$cfe85fcfa3111035$var$addRaycaster","obj","Object3D","material","MeshBasicMaterial","color","origMesh","hitMesh","scale","multiplyScalar","cylinderMesh","transparent","opacity","position","set","z","origVec","Vector3","dirVec","xDir","yDir","zDir","updateMatrixWorld","setFromMatrixPosition","matrixWorld","copy","normalize","firstHitOnly","res","intersectObject","distance","PI","remove","$cfe85fcfa3111035$var$updateFromOptions","pop","boundsTree","console","time","maxLeafTris","strategy","parseFloat","timeEnd","oldLen","lerp","lerpAmt","dist","forEach","vec3","applyAxisAngle","shouldDisplayBounds","MeshBVHVisualizer","depth","WebGLRenderer","antialias","setPixelRatio","setSize","innerWidth","innerHeight","setClearColor","body","Scene","fog","Fog","light","DirectionalLight","AmbientLight","TorusKnotBufferGeometry","MeshPhongMaterial","PerspectiveCamera","far","updateProjectionMatrix","$parcel$interopDefault","gui","$4Q0VG","GUI","rcFolder","addFolder","step","onChange","open","meshFolder","SAH","AVERAGE","aspect","$cfe85fcfa3111035$var$init","$cfe85fcfa3111035$var$render","currTime","render","requestAnimationFrame"],"version":3,"file":"raycast.75e9669a.js.map"}