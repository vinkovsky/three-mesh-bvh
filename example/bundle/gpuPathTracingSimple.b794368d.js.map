{"mappings":"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","sources":["node_modules/stats.js/build/stats.min.js","example/gpuPathTracingSimple.js"],"sourcesContent":["// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport Stats from 'stats.js';\nimport { GUI } from 'dat.gui';\nimport {\n\tMeshBVH, MeshBVHUniformStruct, FloatVertexAttributeTexture,\n\tshaderStructs, shaderIntersectFunction, SAH,\n} from '..';\n\nconst params = {\n\tenableRaytracing: true,\n\tanimate: true,\n\tresolutionScale: 0.5 / window.devicePixelRatio,\n\tsmoothNormals: true,\n};\n\nlet renderer, camera, scene, gui, stats;\nlet rtQuad, mesh, clock;\n\ninit();\nrender();\n\nfunction init() {\n\n\t// renderer setup\n\trenderer = new THREE.WebGLRenderer( { antialias: false } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setClearColor( 0x09141a );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene setup\n\tscene = new THREE.Scene();\n\n\tconst light = new THREE.DirectionalLight( 0xffffff, 1 );\n\tlight.position.set( 1, 1, 1 );\n\tscene.add( light );\n\tscene.add( new THREE.AmbientLight( 0xb0bec5, 0.5 ) );\n\n\t// camera setup\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 50 );\n\tcamera.position.set( 0, 0, 4 );\n\tcamera.far = 100;\n\tcamera.updateProjectionMatrix();\n\n\t// stats setup\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.dom );\n\n\tconst knotGeometry = new THREE.TorusKnotBufferGeometry( 1, 0.3, 300, 50 );\n\tconst bvh = new MeshBVH( knotGeometry, { maxLeafTris: 1, strategy: SAH } );\n\n\tmesh = new THREE.Mesh( knotGeometry, new THREE.MeshStandardMaterial() );\n\tscene.add( mesh );\n\n\tclock = new THREE.Clock();\n\n\tconst rtMaterial = new THREE.ShaderMaterial( {\n\n\t\tdefines: {\n\n\t\t\tSMOOTH_NORMALS: 1,\n\n\t\t},\n\n\t\tuniforms: {\n\t\t\tbvh: { value: new MeshBVHUniformStruct() },\n\t\t\tnormalAttribute: { value: new FloatVertexAttributeTexture() },\n\t\t\tcameraWorldMatrix: { value: new THREE.Matrix4() },\n\t\t\tinvProjectionMatrix: { value: new THREE.Matrix4() },\n\t\t\tinvModelMatrix: { value: new THREE.Matrix4() },\n\t\t},\n\n\t\tvertexShader: /* glsl */`\n\n\t\t\tvarying vec2 vUv;\n\t\t\tvoid main() {\n\n\t\t\t\tvec4 mvPosition = vec4( position, 1.0 );\n\t\t\t\tmvPosition = modelViewMatrix * mvPosition;\n\t\t\t\tgl_Position = projectionMatrix * mvPosition;\n\n\t\t\t\tvUv = uv;\n\n\t\t\t}\n\n\t\t`,\n\n\t\tfragmentShader: /* glsl */`\n\t\t\tprecision highp isampler2D;\n\t\t\tprecision highp usampler2D;\n\t\t\t${ shaderStructs }\n\t\t\t${ shaderIntersectFunction }\n\n\t\t\tuniform mat4 cameraWorldMatrix;\n\t\t\tuniform mat4 invProjectionMatrix;\n\t\t\tuniform mat4 invModelMatrix;\n\t\t\tuniform sampler2D normalAttribute;\n\t\t\tuniform BVH bvh;\n\t\t\tvarying vec2 vUv;\n\n\t\t\tvoid main() {\n\n\t\t\t\t// get [-1, 1] normalized device coordinates\n\t\t\t\tvec2 ndc = 2.0 * vUv - vec2( 1.0 );\n\t\t\t\tvec3 rayOrigin, rayDirection;\n\t\t\t\tndcToCameraRay(\n\t\t\t\t\tndc, invModelMatrix * cameraWorldMatrix, invProjectionMatrix,\n\t\t\t\t\trayOrigin, rayDirection\n\t\t\t\t);\n\n\t\t\t\t// hit results\n\t\t\t\tuvec4 faceIndices = uvec4( 0u );\n\t\t\t\tvec3 faceNormal = vec3( 0.0, 0.0, 1.0 );\n\t\t\t\tvec3 barycoord = vec3( 0.0 );\n\t\t\t\tfloat side = 1.0;\n\t\t\t\tfloat dist = 0.0;\n\n\t\t\t\t// get intersection\n\t\t\t\tbool didHit = bvhIntersectFirstHit( bvh, rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist );\n\n\t\t\t\t#if SMOOTH_NORMALS\n\n\t\t\t\t\tvec3 normal = textureSampleBarycoord(\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tbarycoord,\n\t\t\t\t\t\tfaceIndices.xyz\n\t\t\t\t\t).xyz;\n\n\t\t\t\t#else\n\n\t\t\t\t\tvec3 normal = face.normal;\n\n\t\t\t\t#endif\n\n\t\t\t\t// set the color\n\t\t\t\tgl_FragColor = ! didHit ? vec4( 0.0366, 0.0813, 0.1057, 1.0 ) : vec4( normal, 1.0 );\n\n\t\t\t}\n\t\t`\n\n\t} );\n\n\trtQuad = new FullScreenQuad( rtMaterial );\n\trtMaterial.uniforms.bvh.value.updateFrom( bvh );\n\trtMaterial.uniforms.normalAttribute.value.updateFrom( knotGeometry.attributes.normal );\n\n\tnew OrbitControls( camera, renderer.domElement );\n\n\tgui = new GUI();\n\tgui.add( params, 'enableRaytracing' );\n\tgui.add( params, 'animate' );\n\tgui.add( params, 'smoothNormals' ).onChange( v => {\n\n\t\trtQuad.material.defines.SMOOTH_NORMALS = Number( v );\n\t\trtQuad.material.needsUpdate = true;\n\n\t} );\n\tgui.add( params, 'resolutionScale', 0.1, 1, 0.01 ).onChange( resize );\n\tgui.open();\n\n\twindow.addEventListener( 'resize', resize, false );\n\tresize();\n\n}\n\nfunction resize() {\n\n\tcamera.aspect = window.innerWidth / window.innerHeight;\n\tcamera.updateProjectionMatrix();\n\n\tconst w = window.innerWidth;\n\tconst h = window.innerHeight;\n\tconst dpr = window.devicePixelRatio * params.resolutionScale;\n\trenderer.setSize( w, h );\n\trenderer.setPixelRatio( dpr );\n\n}\n\nfunction render() {\n\n\tstats.update();\n\trequestAnimationFrame( render );\n\n\tconst delta = clock.getDelta();\n\tif ( params.animate ) {\n\n\t\tmesh.rotation.y += delta;\n\n\t}\n\n\tif ( params.enableRaytracing ) {\n\n\t\tcamera.updateMatrixWorld();\n\t\tmesh.updateMatrixWorld();\n\n\t\t// update material\n\t\tconst uniforms = rtQuad.material.uniforms;\n\t\tuniforms.cameraWorldMatrix.value.copy( camera.matrixWorld );\n\t\tuniforms.invProjectionMatrix.value.copy( camera.projectionMatrixInverse );\n\t\tuniforms.invModelMatrix.value.copy( mesh.matrixWorld ).invert();\n\n\t\t// render float target\n\t\trtQuad.render( renderer );\n\n\t} else {\n\n\t\trenderer.render( scene, camera );\n\n\t}\n\n}\n"],"names":["f","e","$f4c59361c37dab96$exports","a","c","appendChild","dom","u","d","children","length","style","display","l","document","createElement","cssText","addEventListener","preventDefault","k","performance","Date","now","g","r","Panel","h","self","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","this","domElement","setMode","Infinity","Math","round","window","devicePixelRatio","v","m","n","p","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","w","min","max","drawImage","define","amd","Stats","$13b8f30d33b68d2b$var$params","enableRaytracing","animate","resolutionScale","smoothNormals","$13b8f30d33b68d2b$var$renderer","$13b8f30d33b68d2b$var$camera","$13b8f30d33b68d2b$var$scene","$13b8f30d33b68d2b$var$gui","$13b8f30d33b68d2b$var$stats","$13b8f30d33b68d2b$var$rtQuad","$13b8f30d33b68d2b$var$mesh","$13b8f30d33b68d2b$var$clock","$hGT0Q","WebGLRenderer","antialias","setPixelRatio","setClearColor","setSize","innerWidth","innerHeight","outputEncoding","sRGBEncoding","body","Scene","light","DirectionalLight","position","set","add","AmbientLight","PerspectiveCamera","far","updateProjectionMatrix","$parcel$interopDefault","knotGeometry","TorusKnotBufferGeometry","bvh","$aBPXg","MeshBVH","maxLeafTris","strategy","SAH","Mesh","MeshStandardMaterial","Clock","rtMaterial","ShaderMaterial","defines","SMOOTH_NORMALS","uniforms","value","MeshBVHUniformStruct","normalAttribute","FloatVertexAttributeTexture","cameraWorldMatrix","Matrix4","invProjectionMatrix","invModelMatrix","vertexShader","fragmentShader","shaderStructs","shaderIntersectFunction","$13b8f30d33b68d2b$var$init","$13b8f30d33b68d2b$var$render"],"version":3,"file":"gpuPathTracingSimple.b794368d.js.map"}