{"mappings":"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","sources":["node_modules/stats.js/src/Stats.js","example/collectTriangles.js"],"sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time > prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport { Stats as default };\n","import Stats from 'stats.js/src/Stats';\nimport * as dat from 'dat.gui';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { acceleratedRaycast, computeBoundsTree, disposeBoundsTree, CONTAINED, INTERSECTED, NOT_INTERSECTED } from '..';\n\nTHREE.Mesh.prototype.raycast = acceleratedRaycast;\nTHREE.BufferGeometry.prototype.computeBoundsTree = computeBoundsTree;\nTHREE.BufferGeometry.prototype.disposeBoundsTree = disposeBoundsTree;\n\nconst params = {\n\tsize: 0.1,\n\trotate: true,\n};\n\nlet stats;\nlet scene, camera, renderer, controls;\nlet targetMesh, brushMesh;\nlet mouse = new THREE.Vector2();\nlet mouseType = - 1, brushActive = false;\nlet lastTime;\n\nfunction init() {\n\n\tconst bgColor = 0x263238 / 2;\n\n\t// renderer setup\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( bgColor, 1 );\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\tdocument.body.appendChild( renderer.domElement );\n\trenderer.domElement.style.touchAction = 'none';\n\n\t// scene setup\n\tscene = new THREE.Scene();\n\tscene.fog = new THREE.Fog( 0x263238 / 2, 20, 60 );\n\n\tconst light = new THREE.DirectionalLight( 0xffffff, 0.5 );\n\tlight.position.set( 1, 1, 1 );\n\tscene.add( light );\n\tscene.add( new THREE.AmbientLight( 0xffffff, 0.4 ) );\n\n\t// geometry setup\n\tconst radius = 1;\n\tconst tube = 0.4;\n\tconst tubularSegments = 800;\n\tconst radialSegments = 400;\n\n\tconst knotGeometry = new THREE.TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments ).toNonIndexed();\n\tconst colorArray = new Uint8Array( knotGeometry.attributes.position.count * 3 );\n\tcolorArray.fill( 255 );\n\tconst colorAttr = new THREE.BufferAttribute( colorArray, 3, true );\n\tcolorAttr.setUsage( THREE.DynamicDrawUsage );\n\tknotGeometry.setAttribute( 'color', colorAttr );\n\n\tconst knotMaterial = new THREE.MeshStandardMaterial( { color: 0xffffff, roughness: 0.3, metalness: 0, vertexColors: true } );\n\ttargetMesh = new THREE.Mesh( knotGeometry, knotMaterial );\n\ttargetMesh.geometry.computeBoundsTree();\n\tscene.add( targetMesh );\n\n\tconst brushGeometry = new THREE.SphereBufferGeometry( 1, 40, 40 );\n\tconst brushMaterial = new THREE.MeshStandardMaterial( {\n\t\tcolor: 0xEC407A,\n\t\troughness: 0.75,\n\t\tmetalness: 0,\n\t\ttransparent: true,\n\t\topacity: 0.5,\n\t\tpremultipliedAlpha: true,\n\t\temissive: 0xEC407A,\n\t\temissiveIntensity: 0.5,\n\t} );\n\n\tbrushMesh = new THREE.Mesh( brushGeometry, brushMaterial );\n\tscene.add( brushMesh );\n\n\t// camera setup\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 50 );\n\tcamera.position.set( 3, 3, 3 );\n\tcamera.far = 100;\n\tcamera.updateProjectionMatrix();\n\n\n\t// stats setup\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.dom );\n\n\tconst gui = new dat.GUI();\n\tgui.add( params, 'size' ).min( 0.1 ).max( 1 ).step( 0.1 );\n\tgui.add( params, 'rotate' );\n\tgui.open();\n\n\twindow.addEventListener( 'resize', function () {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}, false );\n\n\twindow.addEventListener( 'pointermove', function ( e ) {\n\n\t\tmouse.x = ( e.clientX / window.innerWidth ) * 2 - 1;\n\t\tmouse.y = - ( e.clientY / window.innerHeight ) * 2 + 1;\n\t\tbrushActive = true;\n\n\t} );\n\n\twindow.addEventListener( 'pointerdown', function ( e ) {\n\n\t\tmouse.x = ( e.clientX / window.innerWidth ) * 2 - 1;\n\t\tmouse.y = - ( e.clientY / window.innerHeight ) * 2 + 1;\n\t\tmouseType = e.button;\n\n\t\t// disable the controls early if we're over the object because on touch screens\n\t\t// we're not constantly tracking where the cursor is.\n\t\tconst raycaster = new THREE.Raycaster();\n\t\traycaster.setFromCamera( mouse, camera );\n\t\traycaster.firstHitOnly = true;\n\n\t\tconst res = raycaster.intersectObject( targetMesh, true );\n\t\tbrushActive = true;\n\t\tcontrols.enabled = res.length === 0;\n\n\t}, true );\n\n\twindow.addEventListener( 'pointerup', function ( e ) {\n\n\t\tmouseType = - 1;\n\t\tif ( e.pointerType === 'touch' ) {\n\n\t\t\t// disable the brush visualization when the pointer action is done only\n\t\t\t// if it's on a touch device.\n\t\t\tbrushActive = false;\n\n\t\t}\n\n\t}, true );\n\n\twindow.addEventListener( 'contextmenu', function ( e ) {\n\n\t\te.preventDefault();\n\n\t} );\n\n\twindow.addEventListener( 'wheel', function ( e ) {\n\n\t\tlet delta = e.deltaY;\n\n\t\tif ( e.deltaMode === 1 ) {\n\n\t\t\tdelta *= 40;\n\n\t\t}\n\n\t\tif ( e.deltaMode === 2 ) {\n\n\t\t\tdelta *= 40;\n\n\t\t}\n\n\t\tparams.size += delta * 0.0005;\n\t\tparams.size = Math.max( Math.min( params.size, 1 ), 0.1 );\n\n\t\tgui.updateDisplay();\n\n\t} );\n\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\n\tcontrols.addEventListener( 'start', function () {\n\n\t\tthis.active = true;\n\n\t} );\n\n\tcontrols.addEventListener( 'end', function () {\n\n\t\tthis.active = false;\n\n\t} );\n\n\tlastTime = window.performance.now();\n\n}\n\nfunction render() {\n\n\trequestAnimationFrame( render );\n\n\tstats.begin();\n\n\tconst geometry = targetMesh.geometry;\n\tconst bvh = geometry.boundsTree;\n\tconst colorAttr = geometry.getAttribute( 'color' );\n\tconst indexAttr = geometry.index;\n\n\tif ( controls.active || ! brushActive ) {\n\n\t\tbrushMesh.visible = false;\n\n\t} else {\n\n\t\tbrushMesh.scale.setScalar( params.size );\n\n\t\tconst raycaster = new THREE.Raycaster();\n\t\traycaster.setFromCamera( mouse, camera );\n\t\traycaster.firstHitOnly = true;\n\n\t\tconst res = raycaster.intersectObject( targetMesh, true );\n\t\tif ( res.length ) {\n\n\t\t\tbrushMesh.position.copy( res[ 0 ].point );\n\t\t\tcontrols.enabled = false;\n\t\t\tbrushMesh.visible = true;\n\n\t\t\tconst inverseMatrix = new THREE.Matrix4();\n\t\t\tinverseMatrix.copy( targetMesh.matrixWorld ).invert();\n\n\t\t\tconst sphere = new THREE.Sphere();\n\t\t\tsphere.center.copy( brushMesh.position ).applyMatrix4( inverseMatrix );\n\t\t\tsphere.radius = params.size;\n\n\t\t\tconst indices = [];\n\t\t\tconst tempVec = new THREE.Vector3();\n\t\t\tbvh.shapecast( {\n\n\t\t\t\tintersectsBounds: box => {\n\n\t\t\t\t\tconst intersects = sphere.intersectsBox( box );\n\t\t\t\t\tconst { min, max } = box;\n\t\t\t\t\tif ( intersects ) {\n\n\t\t\t\t\t\tfor ( let x = 0; x <= 1; x ++ ) {\n\n\t\t\t\t\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\n\n\t\t\t\t\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\n\n\t\t\t\t\t\t\t\t\ttempVec.set(\n\t\t\t\t\t\t\t\t\t\tx === 0 ? min.x : max.x,\n\t\t\t\t\t\t\t\t\t\ty === 0 ? min.y : max.y,\n\t\t\t\t\t\t\t\t\t\tz === 0 ? min.z : max.z\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tif ( ! sphere.containsPoint( tempVec ) ) {\n\n\t\t\t\t\t\t\t\t\t\treturn INTERSECTED;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn CONTAINED;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn intersects ? INTERSECTED : NOT_INTERSECTED;\n\n\t\t\t\t},\n\n\t\t\t\tintersectsTriangle: ( tri, i, contained ) => {\n\n\t\t\t\t\tif ( contained || tri.intersectsSphere( sphere ) ) {\n\n\t\t\t\t\t\tconst i3 = 3 * i;\n\t\t\t\t\t\tindices.push( i3, i3 + 1, i3 + 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( mouseType === 0 || mouseType === 2 ) {\n\n\t\t\t\tlet r = 255, g = 255, b = 255;\n\t\t\t\tif ( mouseType === 0 ) {\n\n\t\t\t\t\tr = 15;\n\t\t\t\t\tg = 78;\n\t\t\t\t\tb = 85;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst i2 = indexAttr.getX( indices[ i ] );\n\t\t\t\t\tcolorAttr.setX( i2, r );\n\t\t\t\t\tcolorAttr.setY( i2, g );\n\t\t\t\t\tcolorAttr.setZ( i2, b );\n\n\t\t\t\t}\n\n\t\t\t\tcolorAttr.needsUpdate = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tcontrols.enabled = true;\n\t\t\tbrushMesh.visible = false;\n\n\t\t}\n\n\t}\n\n\tconst currTime = window.performance.now();\n\tif ( params.rotate ) {\n\n\t\tconst delta = currTime - lastTime;\n\t\ttargetMesh.rotation.y += delta * 0.001;\n\n\t}\n\n\tlastTime = currTime;\n\n\trenderer.render( scene, camera );\n\tstats.end();\n\n}\n\n\ninit();\nrender();\n"],"names":["$dfab0b5db083582f$export$2e2bcd8739ae039","mode","container","document","createElement","addPanel","panel","appendChild","dom","showPanel","id","i","children","length","style","display","cssText","addEventListener","event","preventDefault","beginTime","performance","Date","now","prevTime","frames","fpsPanel","Panel","msPanel","self","memory","memPanel","REVISION","begin","end","time","update","usedJSHeapSize","jsHeapSizeLimit","this","domElement","setMode","name","fg","bg","min","Infinity","max","round","Math","PR","window","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","canvas","width","height","context","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","value","maxValue","drawImage","$hGT0Q","Mesh","prototype","raycast","$aBPXg","acceleratedRaycast","BufferGeometry","computeBoundsTree","disposeBoundsTree","$171d1d44c66b7039$var$params","size","rotate","$171d1d44c66b7039$var$stats","$171d1d44c66b7039$var$scene","$171d1d44c66b7039$var$camera","$171d1d44c66b7039$var$renderer","$171d1d44c66b7039$var$controls","$171d1d44c66b7039$var$targetMesh","$171d1d44c66b7039$var$brushMesh","$171d1d44c66b7039$var$lastTime","$171d1d44c66b7039$var$mouse","Vector2","$171d1d44c66b7039$var$mouseType","$171d1d44c66b7039$var$brushActive","WebGLRenderer","antialias","setPixelRatio","setSize","innerWidth","innerHeight","setClearColor","outputEncoding","sRGBEncoding","body","touchAction","Scene","fog","Fog","light","DirectionalLight","position","set","add","AmbientLight","knotGeometry","TorusKnotBufferGeometry","toNonIndexed","colorArray","Uint8Array","attributes","count","fill","colorAttr","BufferAttribute","setUsage","DynamicDrawUsage","setAttribute","knotMaterial","MeshStandardMaterial","color","roughness","metalness","vertexColors","geometry","brushGeometry","SphereBufferGeometry","brushMaterial","transparent","opacity","premultipliedAlpha","emissive","emissiveIntensity","PerspectiveCamera","far","updateProjectionMatrix","gui","$4Q0VG","GUI","step","open","aspect","e","x","clientX","y","clientY","button","raycaster","Raycaster","setFromCamera","firstHitOnly","res","intersectObject","enabled","pointerType","delta","deltaY","deltaMode","updateDisplay","$W2bOH","OrbitControls","active","$171d1d44c66b7039$var$init","$171d1d44c66b7039$var$render","requestAnimationFrame","bvh","boundsTree","getAttribute","indexAttr","index","visible","scale","setScalar","copy","point","inverseMatrix","Matrix4","matrixWorld","invert","sphere","Sphere","center","applyMatrix4","radius","indices","tempVec","Vector3","shapecast","intersectsBounds","box","intersects","intersectsBox","z","containsPoint","INTERSECTED","CONTAINED","NOT_INTERSECTED","intersectsTriangle","tri","contained","intersectsSphere","i3","push","r","g","b","l","i2","getX","setX","setY","setZ","needsUpdate","currTime","rotation","render"],"version":3,"file":"collectTriangles.5d7f440f.js.map"}