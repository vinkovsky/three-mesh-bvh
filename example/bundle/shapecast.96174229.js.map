{"mappings":"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","sources":["node_modules/stats.js/build/stats.min.js","example/shapecast.js"],"sourcesContent":["// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","import Stats from 'stats.js';\nimport * as dat from 'dat.gui';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls.js';\nimport { acceleratedRaycast, computeBoundsTree, disposeBoundsTree, MeshBVHVisualizer } from '..';\n\nTHREE.Mesh.prototype.raycast = acceleratedRaycast;\nTHREE.BufferGeometry.prototype.computeBoundsTree = computeBoundsTree;\nTHREE.BufferGeometry.prototype.disposeBoundsTree = disposeBoundsTree;\n\nconst params = {\n\n\tspeed: 1,\n\tvisualizeBounds: false,\n\tvisualBoundsDepth: 10,\n\tshape: 'sphere',\n\tposition: new THREE.Vector3(),\n\trotation: new THREE.Euler(),\n\tscale: new THREE.Vector3( 1, 1, 1 ),\n};\n\nlet stats;\nlet scene, camera, renderer, orbitControls, boundsViz, transformControls;\nlet targetMesh;\nlet shapes = {};\n\nfunction init() {\n\n\tconst bgColor = 0x263238 / 2;\n\n\t// renderer setup\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( bgColor, 1 );\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene setup\n\tscene = new THREE.Scene();\n\tscene.fog = new THREE.Fog( 0x263238 / 2, 20, 60 );\n\n\tconst light = new THREE.DirectionalLight( 0xffffff, 0.5 );\n\tlight.position.set( 1, 1, 1 );\n\tscene.add( light );\n\tscene.add( new THREE.AmbientLight( 0xffffff, 0.4 ) );\n\n\t// geometry setup\n\tconst radius = 1;\n\tconst tube = 0.4;\n\tconst tubularSegments = 400;\n\tconst radialSegments = 100;\n\n\tconst knotGeometry = new THREE.TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments );\n\tconst material = new THREE.MeshPhongMaterial( { color: 0xffffff, side: THREE.DoubleSide } );\n\ttargetMesh = new THREE.Mesh( knotGeometry, material );\n\ttargetMesh.geometry.computeBoundsTree();\n\tscene.add( targetMesh );\n\n\t// camera setup\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 50 );\n\tcamera.position.set( 3, 3, 3 );\n\tcamera.far = 100;\n\tcamera.updateProjectionMatrix();\n\n\ttransformControls = new TransformControls( camera, renderer.domElement );\n\tscene.add( transformControls );\n\n\torbitControls = new OrbitControls( camera, renderer.domElement );\n\n\t// stats setup\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.dom );\n\n\tconst shapeMaterial = new THREE.MeshStandardMaterial( {\n\t\tmetalness: 0.1,\n\t\ttransparent: true,\n\t\topacity: 0.75,\n\t\tpremultipliedAlpha: true\n\t} );\n\tshapes.sphere = new THREE.Mesh( new THREE.SphereBufferGeometry( 1, 50, 50 ), shapeMaterial );\n\tscene.add( shapes.sphere );\n\n\tshapes.box = new THREE.Mesh( new THREE.BoxBufferGeometry( 1, 1, 1 ), shapeMaterial );\n\tscene.add( shapes.box );\n\n\tshapes.geometry = new THREE.Mesh( new THREE.TorusKnotBufferGeometry( .5, .2, 200, 50 ), shapeMaterial );\n\tshapes.geometry.geometry.computeBoundsTree();\n\tscene.add( shapes.geometry );\n\n\t// Code for debugging triangle intersection\n\t// const t1 = new THREE.Triangle();\n\t// const t2 = new THREE.Triangle();\n\n\t// t1.a.set( - 1, - 1, 0 );\n\t// t1.b.set( 1, - 1, 0 );\n\t// t1.c.set( 0, 1, 0 );\n\n\t// t2.a.set( - 1, 0, - 0.5 );\n\t// t2.b.set( 0, 0, 1 );\n\t// t2.c.set( - 2, 0, 1 );\n\n\t// const res = triangleIntersectsTriangle( t1, t2 );\n\t// console.log( 'intersects ', res );\n\n\t// var lineMat = new THREE.LineBasicMaterial({ color: 0x0000ff });\n\n\t// var geometry = new THREE.Geometry();\n\t// geometry.vertices.push( t1.a, t1.b, t1.c, t1.a );\n\t// var line = new THREE.Line( geometry, lineMat );\n\t// scene.add( line );\n\n\t// var geometry = new THREE.Geometry();\n\t// geometry.vertices.push( t2.a, t2.b, t2.c, t2.a );\n\t// var line = new THREE.Line( geometry, lineMat );\n\t// scene.add( line );\n\n\t// \ttargetMesh.visible = false;\n\n\tconst gui = new dat.GUI();\n\tgui.add( params, 'speed' ).min( 0 ).max( 10 );\n\tgui.add( params, 'visualizeBounds' ).onChange( () => updateFromOptions() );\n\tgui.add( params, 'visualBoundsDepth' ).min( 1 ).max( 40 ).step( 1 ).onChange( () => updateFromOptions() );\n\tgui.add( params, 'shape', [ 'sphere', 'box', 'geometry' ] );\n\n\tgui.add( transformControls, 'mode', [ 'translate', 'rotate' ] );\n\n\tconst posFolder = gui.addFolder( 'position' );\n\tposFolder.add( params.position, 'x' ).min( - 5 ).max( 5 ).step( 0.001 );\n\tposFolder.add( params.position, 'y' ).min( - 5 ).max( 5 ).step( 0.001 );\n\tposFolder.add( params.position, 'z' ).min( - 5 ).max( 5 ).step( 0.001 );\n\tposFolder.open();\n\n\tconst rotFolder = gui.addFolder( 'rotation' );\n\trotFolder.add( params.rotation, 'x' ).min( - Math.PI ).max( Math.PI ).step( 0.001 );\n\trotFolder.add( params.rotation, 'y' ).min( - Math.PI ).max( Math.PI ).step( 0.001 );\n\trotFolder.add( params.rotation, 'z' ).min( - Math.PI ).max( Math.PI ).step( 0.001 );\n\trotFolder.open();\n\n\tgui.open();\n\n\ttransformControls.addEventListener( 'change', function () {\n\n\t\tparams.position.copy( shapes[ params.shape ].position );\n\t\tparams.rotation.copy( shapes[ params.shape ].rotation );\n\t\tparams.scale.copy( shapes[ params.shape ].scale );\n\t\tgui.updateDisplay();\n\n\t} );\n\n\ttransformControls.addEventListener( 'mouseDown', function () {\n\n\t\torbitControls.enabled = false;\n\n\t} );\n\n\ttransformControls.addEventListener( 'mouseUp', function () {\n\n\t\torbitControls.enabled = true;\n\n\t} );\n\n\torbitControls.addEventListener( 'start', function () {\n\n\t\ttransformControls.enabled = false;\n\n\t} );\n\n\torbitControls.addEventListener( 'end', function () {\n\n\t\ttransformControls.enabled = true;\n\n\t} );\n\n\twindow.addEventListener( 'resize', function () {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}, false );\n\n\twindow.addEventListener( 'keydown', function ( e ) {\n\n\t\tswitch ( e.key ) {\n\n\t\t\tcase 'w':\n\t\t\t\ttransformControls.mode = 'translate';\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\t\ttransformControls.mode = 'rotate';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tgui.updateDisplay();\n\n\t} );\n\n}\n\nfunction updateFromOptions() {\n\n\t// Update bounds viz\n\tif ( boundsViz && ! params.visualizeBounds ) {\n\n\t\tscene.remove( boundsViz );\n\t\tboundsViz = null;\n\n\t}\n\n\tif ( ! boundsViz && params.visualizeBounds ) {\n\n\t\tboundsViz = new MeshBVHVisualizer( targetMesh );\n\t\tscene.add( boundsViz );\n\n\t}\n\n\tif ( boundsViz ) {\n\n\t\tboundsViz.depth = params.visualBoundsDepth;\n\n\t}\n\n}\n\nlet lastTime = window.performance.now();\nfunction render() {\n\n\tconst delta = window.performance.now() - lastTime;\n\tlastTime = window.performance.now();\n\n\ttargetMesh.rotation.y += params.speed * delta * 0.001;\n\ttargetMesh.updateMatrixWorld();\n\n\tstats.begin();\n\n\tif ( boundsViz ) boundsViz.update();\n\n\trenderer.render( scene, camera );\n\tstats.end();\n\n\t// casts\n\tfor ( const shape in shapes ) shapes[ shape ].visible = false;\n\n\tconst s = params.shape;\n\tconst shape = shapes[ s ];\n\tshape.visible = true;\n\tshape.position.copy( params.position );\n\tshape.rotation.copy( params.rotation );\n\tshape.scale.copy( params.scale );\n\n\tconst transformMatrix =\n\t\tnew THREE.Matrix4()\n\t\t    .copy( targetMesh.matrixWorld ).invert()\n\t\t\t.multiply( shape.matrixWorld );\n\n\tif ( s === 'sphere' ) {\n\n\t\tconst sphere = new THREE.Sphere( undefined, 1 );\n\t\tsphere.applyMatrix4( transformMatrix );\n\n\t\tconst hit = targetMesh.geometry.boundsTree.intersectsSphere( sphere );\n\t\tshape.material.color.set( hit ? 0xE91E63 : 0x666666 );\n\t\tshape.material.emissive.set( 0xE91E63 ).multiplyScalar( hit ? 0.25 : 0 );\n\n\t} else if ( s === 'box' ) {\n\n\t\tconst box = new THREE.Box3();\n\t\tbox.min.set( - 0.5, - 0.5, - 0.5 );\n\t\tbox.max.set( 0.5, 0.5, 0.5 );\n\n\t\tconst hit = targetMesh.geometry.boundsTree.intersectsBox( box, transformMatrix );\n\t\tshape.material.color.set( hit ? 0xE91E63 : 0x666666 );\n\t\tshape.material.emissive.set( 0xE91E63 ).multiplyScalar( hit ? 0.25 : 0 );\n\n\t} else if ( s === 'geometry' ) {\n\n\t\tconst hit = targetMesh.geometry.boundsTree.intersectsGeometry( shape.geometry, transformMatrix );\n\t\tshape.material.color.set( hit ? 0xE91E63 : 0x666666 );\n\t\tshape.material.emissive.set( 0xE91E63 ).multiplyScalar( hit ? 0.25 : 0 );\n\n\t}\n\n\tif ( transformControls.object !== shape ) {\n\n\t\ttransformControls.attach( shape );\n\n\t}\n\n\trequestAnimationFrame( render );\n\n}\n\n\ninit();\nupdateFromOptions();\nrender();\n"],"names":["f","e","$f4c59361c37dab96$exports","a","c","appendChild","dom","u","d","children","length","style","display","l","document","createElement","cssText","addEventListener","preventDefault","k","performance","Date","now","g","r","Panel","h","self","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","this","domElement","setMode","Infinity","Math","round","window","devicePixelRatio","v","m","n","p","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","w","min","max","drawImage","define","amd","Stats","$hGT0Q","Mesh","prototype","raycast","$aBPXg","acceleratedRaycast","BufferGeometry","computeBoundsTree","disposeBoundsTree","$18d08264d3ba8701$var$params","speed","visualizeBounds","visualBoundsDepth","shape","position","Vector3","rotation","Euler","scale","$18d08264d3ba8701$var$stats","$18d08264d3ba8701$var$scene","$18d08264d3ba8701$var$camera","$18d08264d3ba8701$var$renderer","$18d08264d3ba8701$var$orbitControls","$18d08264d3ba8701$var$boundsViz","$18d08264d3ba8701$var$transformControls","$18d08264d3ba8701$var$targetMesh","$18d08264d3ba8701$var$shapes","$18d08264d3ba8701$var$updateFromOptions","remove","MeshBVHVisualizer","add","depth","$18d08264d3ba8701$var$lastTime","WebGLRenderer","antialias","setPixelRatio","setSize","innerWidth","innerHeight","setClearColor","body","Scene","fog","Fog","light","DirectionalLight","set","AmbientLight","knotGeometry","TorusKnotBufferGeometry","material","MeshPhongMaterial","color","side","DoubleSide","geometry","PerspectiveCamera","far","updateProjectionMatrix","$1h7P3","TransformControls","$W2bOH","OrbitControls","$parcel$interopDefault","shapeMaterial","MeshStandardMaterial","metalness","transparent","opacity","premultipliedAlpha","sphere","SphereBufferGeometry","box","BoxBufferGeometry","gui","$4Q0VG","GUI","onChange","step","posFolder","addFolder","open","rotFolder","PI","copy","updateDisplay","enabled","aspect","key","mode","$18d08264d3ba8701$var$init","$18d08264d3ba8701$var$render","delta","y","updateMatrixWorld","render","visible","s","shape1","transformMatrix","Matrix4","matrixWorld","invert","multiply","Sphere","undefined","applyMatrix4","hit","boundsTree","intersectsSphere","emissive","multiplyScalar","Box3","intersectsBox","intersectsGeometry","object","attach","requestAnimationFrame"],"version":3,"file":"shapecast.96174229.js.map"}